{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojiWeHave","Object","keys","App","useState","inputEmoji","setInputEmoji","outputEmoji","setOutputEmoji","className","style","color","src","alt","onChange","event","target","value","placeholder","padding","map","emoji","display","fontSize","cursor","onClick","console","log","selectEmoji","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4KAGIA,EAAkB,CACpB,eAAM,cACN,iCAAS,iBACT,eAAM,kBACN,eAAM,UACN,iCAAS,SACT,gBAAO,yBACP,eAAM,sBACN,SAAK,cACL,eAAM,gBACN,eAAM,UACN,gBAAO,eACP,gBAAO,sBACP,gBAAO,qBACP,gBAAO,gBACP,gBAAO,gBACP,gBAAO,yBACP,gBAAO,iBACP,eAAM,cAEJC,EAAcC,OAAOC,KAAKH,GAGf,SAASI,IACtB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAoBA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,SAAf,SACE,iCACE,0DAGJ,gCACE,oBAAIC,MAAO,CAAEC,MAAO,SAApB,gFAGA,qBACEC,IAAI,8EACJC,IAAI,4CAGR,gCACE,iCACE,uBACEC,SAtCZ,SAA2BC,GACzB,IAAIV,EAAaU,EAAMC,OAAOC,MAC1BZ,KAAcN,GAChBS,EAAeT,EAAgBM,IAC/BC,EAAcD,IAEdC,EACE,6EAgCMY,YAAY,8BAGhB,sBAAMT,UAAU,gBAAhB,SACE,qBAAIC,MAAO,CAAES,QAAS,QAAtB,UACGd,EADH,IACgBE,OAIlB,sBAAKG,MAAO,CAAES,QAAS,eAAvB,UACE,oBAAIT,MAAO,CAAEC,MAAO,WAApB,qCACCX,EAAYoB,KAAI,SAACC,GAChB,OACE,oBAEEX,MAAO,CACLY,QAAS,SACTC,SAAU,OACVJ,QAAS,SACTK,OAAQ,WAEVC,QAAS,kBAhDzB,SAAqBJ,GACnBK,QAAQC,IAAIN,GACZb,EAAeT,EAAgBsB,IAC/Bf,EAAce,GA6CeO,CAAYP,IAR7B,SAUGA,GATIA,iBC9EvB,IAAMQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC9B,EAAD,MAEF0B,I","file":"static/js/main.00d51d37.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState } from \"react\";\n\nvar emojiDictionary = {\n  \"üôå\": \"celebration\",\n  \"üíÜ‚Äç‚ôÄÔ∏è\": \"leave me alone\",\n  \"üòØ\": \"hush hush hush!\",\n  \"üò§\": \"triumph\",\n  \"üôá‚Äç‚ôÇÔ∏è\": \"bowing\",\n  \"üòá \": \"Smiling Face with Halo\",\n  \"ü§ö\": \"Raised Back of Hand\",\n  \"‚úã\": \"Raised Hand\",\n  \"üññ\": \"Vulcan Salute\",\n  \"üëå\": \"OK Hand\",\n  \"üòê \": \"Neutral Face\",\n  \"üòë \": \"Expressionless Face\",\n  \"üò∂ \": \"Face Without Mouth\",\n  \"üòè \": \"Smirking Face\",\n  \"üòí \": \"Unamused Face\",\n  \"üôÑ \": \"Face with Rolling Eyes\",\n  \"üò¨ \": \"Grimacing Face\",\n  \"ü§•\": \"Lying Face\"\n};\nvar emojiWeHave = Object.keys(emojiDictionary);\n//console.log(emojiWeKnow);\n\nexport default function App() {\n  const [inputEmoji, setInputEmoji] = useState(\"\");\n  const [outputEmoji, setOutputEmoji] = useState(\"\");\n\n  function inputEmojiHandler(event) {\n    var inputEmoji = event.target.value;\n    if (inputEmoji in emojiDictionary) {\n      setOutputEmoji(emojiDictionary[inputEmoji]);\n      setInputEmoji(inputEmoji);\n    } else {\n      setInputEmoji(\n        \"oops!! This emoji is not in our database! sorry!! Try Again üôÇ\"\n      );\n    }\n  }\n\n  function selectEmoji(emoji) {\n    console.log(emoji);\n    setOutputEmoji(emojiDictionary[emoji]);\n    setInputEmoji(emoji);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"block\">\n        <div className=\"header\">\n          <center>\n            <h1> Emoji-Pedia Fun App</h1>\n          </center>\n        </div>\n        <div>\n          <h4 style={{ color: \"black\" }}>\n            Wanna know what emoji it is? Search or select below in Emoji-Pedia\n          </h4>\n          <img\n            src=\"https://www.nicepng.com/png/detail/882-8820872_hard-thinking-face-emoji.png\"\n            alt=\"Hard Thinking Face Emoji@nicepng.com\"\n          />\n        </div>\n        <div>\n          <center>\n            <input\n              onChange={inputEmojiHandler}\n              placeholder=\"Enter Emoji to Search..\"\n            ></input>\n          </center>\n          <span className=\"meaningOutput\">\n            <h3 style={{ padding: \"0rem\" }}>\n              {inputEmoji} {outputEmoji}\n            </h3>\n          </span>\n\n          <div style={{ padding: \"0.5rem 1rem\" }}>\n            <h3 style={{ color: \"#888888\" }}>Here are emojis we know</h3>\n            {emojiWeHave.map((emoji) => {\n              return (\n                <li\n                  key={emoji}\n                  style={{\n                    display: \"inline\",\n                    fontSize: \"2rem\",\n                    padding: \"0.5rem\",\n                    cursor: \"pointer\"\n                  }}\n                  onClick={() => selectEmoji(emoji)}\n                >\n                  {emoji}\n                </li>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}